"use strict";(self["webpackChunkclient"]=self["webpackChunkclient"]||[]).push([[245],{245:function(e,t,i){i.r(t),i.d(t,{default:function(){return Ut}});var r,n=i(36663),s=i(66636),a=i(61681),o=i(63314),l=i(78668),u=i(81977),c=(i(7753),i(39994),i(7283)),p=i(40266),m=i(39835),d=i(48672),h=i(91957),y=i(80085),f=i(98549),g=i(66341),b=i(70375),R=i(25709),w=i(67134),v=i(13802),x=i(76868),S=i(3466),_=i(42730),C=i(34248),I=i(31e3),F=i(59510),P=i(72285),D=i(79438);const T=new Set(["raster","raster2","dem","fillraster"]),N=new Set(["rasters"]),M=e=>e&&e.rasterFunction?J.fromJSON(e):e,O=e=>e&&e instanceof J?e.toJSON():e,A=e=>e?.functionName&&!e.declaredClass,V=e=>A(e)?new J(e):e,j=e=>{if(null==e)return null;e=(0,w.d9)(e);const t={};for(const i of Object.keys(e))T.has(i.toLowerCase())?t[i]=M(e[i]):N.has(i.toLowerCase())&&Array.isArray(e[i])?t[i]=e[i].map(M):t[i]=e[i];return t};let J=r=class extends P.wq{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(e){if(e){const t=Object.keys(e);if(t.some((t=>T.has(t.toLowerCase())&&A(e[t])))||t.some((t=>N.has(t.toLowerCase())&&Array.isArray(e[t])&&e[t].some((e=>A(e)))))){e=(0,w.d9)(e);for(const i of t)T.has(i.toLowerCase())?e[i]=V(e[i]):N.has(i.toLowerCase())&&Array.isArray(e[i])&&(e[i]=e[i].map((e=>V(e))))}}this._set("functionArguments",e)}readFunctionArguments(e){return j(e)}writeFunctionArguments(e,t,i){const r={};for(const n of Object.keys(e))T.has(n.toLowerCase())?r[n]=O(e[n]):N.has(n.toLowerCase())&&Array.isArray(e[n])?r[n]=e[n].map(O):r[n]=O(e[n]);t[i]=r}readFunctionName(e,t){const i=t.rasterFunctionInfos,r=t.name;return r||(i&&i.length&&"None"!==i[0].name?i[0].name:t.rasterFunctionDefinition?t.rasterFunctionDefinition.name:t.rasterFunction)}clone(){return new r({functionName:this.functionName,functionArguments:(0,w.d9)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:(0,w.d9)(this.rasterFunctionDefinition)})}};(0,n._)([(0,u.Cb)({json:{type:Object,name:"rasterFunctionArguments"}})],J.prototype,"functionArguments",null),(0,n._)([(0,C.r)("functionArguments")],J.prototype,"readFunctionArguments",null),(0,n._)([(0,m.c)("functionArguments")],J.prototype,"writeFunctionArguments",null),(0,n._)([(0,u.Cb)({json:{type:String,write:{target:"rasterFunction"}}})],J.prototype,"functionName",void 0),(0,n._)([(0,C.r)("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],J.prototype,"readFunctionName",null),(0,n._)([(0,D.J)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,u.Cb)({json:{default:"unknown"}})],J.prototype,"outputPixelType",void 0),(0,n._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],J.prototype,"variableName",void 0),(0,n._)([(0,u.Cb)({type:Object,json:{name:"rasterFunctionDefinition"}})],J.prototype,"rasterFunctionDefinition",void 0),J=r=(0,n._)([(0,p.j)("esri.layers.support.RasterFunction")],J);const k=J,E={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var q=i(55987),L=i(57988),z=i(7803);const Z={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},U={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},H=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function B(e){return H.has(e.type)}function Q(e,t){if(!e||!t)return(0,w.d9)(e||t);const i=(0,w.d9)(e);if(t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),G(i.rasterFunctionDefinition.arguments,t)}else"none"!==t.functionName.toLowerCase()&&($(i.functionArguments).Raster=t);return i}function G(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&G(e[i].arguments,t))}function W(e){const t=(0,w.d9)(E[e.functionName+"Function"]),i=e.functionArguments;for(const r in i)"raster"===r.toLowerCase()?(t.arguments[r]=W(i[r]),t.arguments[r].type="RasterFunctionTemplate"):"colormap"===r.toLowerCase()?(t.arguments[r].value=le(i[r]),t.arguments.ColorSchemeType.value=0):t.arguments[r].value=i[r];return t}function K(e,t){switch(t=t||{},e.type){case"raster-stretch":return te(e,t);case"class-breaks":return ie(e,t);case"unique-value":return se(e,t);case"raster-colormap":return ae(e,t);case"vector-field":return Y(e,t);case"raster-shaded-relief":return ee(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function $(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?$(t.functionArguments):e}const X={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Y(e,t){const i=new k;i.functionName="VectorFieldRenderer";const{dataType:r,bandProperties:n}=t,s="vector-uv"===r;let a,o;n&&2===n.length&&(a=n.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),o=n.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==a&&null!==a||(a=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,c=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new z.Z,p={magnitudeBandID:a,directionBandID:o,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:U[e.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};return i.functionArguments=p,t.convertToRFT?new k({rasterFunctionDefinition:W(i)}):i}function ee(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType)return new k;const r=new k;r.functionName="Hillshade";const n="traditional"===e.hillshadeType?0:1,s="none"===e.scalingType?1:3,a={HillshadeType:n,SlopeType:s,ZFactor:e.zFactor};return 0===n&&(a.Azimuth=e.azimuth,a.Altitude=e.altitude),3===s&&(a.PSPower=e.pixelSizePower,a.PSZFactor=e.pixelSizeFactor),r.functionArguments=a,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?a.ColorRamp=(0,q.pM)(e.colorRamp):a.Colormap=(0,q.Jw)(e.colorRamp,256)),i?new k({rasterFunctionDefinition:W(r)}):r}function te(e,t){const i=t.convertToRFT,r=new k;r.functionName="Stretch";const n=X[L.v.toJSON(e.stretchType)],s="u8",a={StretchType:n,Statistics:oe(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(a.Min=e.outputMin),null!=e.outputMax&&(a.Max=e.outputMax),n===X.standardDeviation?(a.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=s):n===X.percentClip?(a.MinPercent=e.minPercent,a.MaxPercent=e.maxPercent,r.outputPixelType=s):n===X.minMax?r.outputPixelType=s:n===X.sigmoid&&(a.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=a,r.variableName="Raster",e.colorRamp){const n=e.colorRamp,s=new k;if(i)s.functionArguments={ColorRamp:(0,q.pM)(n)};else{const i=(0,q.Uh)(n);if(i)s.functionArguments={colorRamp:i};else if(!t.convertColorRampToColormap||"algorithmic"!==n.type&&"multipart"!==n.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),s.functionArguments={colorRamp:t}}else s.functionArguments={Colormap:(0,q.Jw)(n,256)}}return s.variableName="Raster",s.functionName="Colormap",s.functionArguments.Raster=r,i?new k({rasterFunctionDefinition:W(s)}):s}return i?new k({rasterFunctionDefinition:W(r)}):r}function ie(e,t){const i=[],r=[],n=[],s=[],a=1e-6,{pixelType:o,rasterAttributeTable:l}=t,u=l&&l.features,c=ne(l);if(u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const r=t.symbol.color;let n;r.a&&u.forEach((a=>{n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||i===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([a.attributes[c],r.r,r.g,r.b])}))}));const i=o?re(s,o):s,r=new k;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new k({rasterFunctionDefinition:W(r)}):r}e.classBreakInfos.forEach(((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?i.push(e.minValue,e.maxValue+a):i.push(e.minValue+a,e.maxValue+a),r.push(t),s.push([t,o.r,o.g,o.b])):n.push(e.minValue,e.maxValue)}));const p=o?re(s,o):s,m=new k;m.functionName="Remap",m.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:n},m.variableName="Raster";const d=new k;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:m},t.convertToRFT?new k({rasterFunctionDefinition:W(d)}):d}function re(e,t){const i=Z[String(t).toLowerCase()];return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function ne(e){if(!e)return;const{fields:t}=e,i=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return i&&i.name}function se(e,t){const i=[],{pixelType:r,rasterAttributeTable:n}=t,s=n&&n.features,a=ne(n),o=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(s){const t=new Map;l.forEach((e=>{const i=e.value,r=e.symbol.color?.toRgb();null!=i&&r&&t.set(String(i),r)}));const r=e.field;s.forEach((({attributes:e})=>{const n=String(e[r]),s=e[a];if(t.has(n)){const e=t.get(n);i.push([s,...e])}else o&&i.push([s,...o])}))}else for(let p=0;p<l.length;p++){const e=l[p],t=e.symbol.color,r=+e.value;if(t?.a){if(isNaN(r))return null;i.push([r,t.r,t.g,t.b])}}const u=r&&i.length>0?re(i,r):i,c=new k;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=u,c.variableName="Raster",t.convertToRFT?new k({rasterFunctionDefinition:W(c)}):c}function ae(e,t){const i=e.extractColormap();if(!i||0===i.length)return;const{pixelType:r}=t,n=r?re(i,r):i,s=new k;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,t.convertToRFT?new k({rasterFunctionDefinition:W(s)}):s}function oe(e){const t=[];return e.forEach((e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}})),t}function le(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,q.io)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}var ue,ce=i(69236),pe=i(86566);const me=(0,R.w)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),de=(0,R.w)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function he(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return de.fromJSON(t)}let ye=ue=class extends P.wq{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return he(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const i=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=i||(r?me.toJSON(r):null);return me.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new ue({ascending:this.ascending,itemRenderingRule:(0,w.d9)(this.itemRenderingRule),lockRasterIds:(0,w.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,w.d9)(this.multidimensionalDefinition),objectIds:(0,w.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,w.d9)(this.viewpoint),where:this.where})}};(0,n._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],ye.prototype,"ascending",void 0),(0,n._)([(0,C.r)("ascending",["ascending","sortAscending"])],ye.prototype,"readAscending",null),(0,n._)([(0,u.Cb)({type:k,json:{write:!0}})],ye.prototype,"itemRenderingRule",void 0),(0,n._)([(0,u.Cb)({type:[c.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],ye.prototype,"lockRasterIds",void 0),(0,n._)([(0,u.Cb)({type:String,json:{type:de.jsonValues,write:{target:"mosaicMethod",writer:de.write}}})],ye.prototype,"method",void 0),(0,n._)([(0,C.r)("method",["mosaicMethod","defaultMosaicMethod"])],ye.prototype,"readMethod",null),(0,n._)([(0,u.Cb)({type:[F.Z],json:{write:!0}})],ye.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,u.Cb)({type:[c.z8],json:{name:"fids",write:!0}})],ye.prototype,"objectIds",void 0),(0,n._)([(0,u.Cb)({json:{type:me.jsonValues,read:{reader:me.read},write:{target:"mosaicOperation",writer:me.write}}})],ye.prototype,"operation",void 0),(0,n._)([(0,C.r)("operation",["mosaicOperation","mosaicOperator"])],ye.prototype,"readOperation",null),(0,n._)([(0,u.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],ye.prototype,"sortField",void 0),(0,n._)([(0,u.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],ye.prototype,"sortValue",void 0),(0,n._)([(0,ce.p)("sortValue")],ye.prototype,"castSortValue",null),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],ye.prototype,"viewpoint",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],ye.prototype,"where",void 0),ye=ue=(0,n._)([(0,p.j)("esri.layers.support.MosaicRule")],ye);const fe=ye;var ge=i(73556);let be=class extends P.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new fe({where:i})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const i=e.pixelFilter,r=!e.format||e.format.includes("jpg")||e.format.includes("png");return t=this._addResampleRasterFunction(t),r&&!i&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){const e=this.layer,{rasterInfo:t,renderingRule:i,renderer:r}=e;return r&&B(r)?Q(K(r,{rasterAttributeTable:t.attributeTable,pixelType:t.pixelType,dataType:t.dataType,bandProperties:t.keyProperties?.BandProperties,convertColorRampToColormap:e.version<10.6,convertToRFT:!!i?.rasterFunctionDefinition}),i):i}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;let i=new k({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return i=e?.rasterFunctionDefinition?new k({rasterFunctionDefinition:W(i)}):i,Q(i,e)}};(0,n._)([(0,u.Cb)()],be.prototype,"layer",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,m.c)("adjustAspectRatio")],be.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,u.Cb)({json:{write:!0}}),(0,_.B)("layer.bandIds")],be.prototype,"bandIds",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"compression",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}}),(0,_.B)("layer.compressionQuality")],be.prototype,"compressionQuality",void 0),(0,n._)([(0,m.c)("compressionQuality")],be.prototype,"writeCompressionQuality",null),(0,n._)([(0,u.Cb)({json:{write:!0}}),(0,_.B)("layer.compressionTolerance")],be.prototype,"compressionTolerance",void 0),(0,n._)([(0,m.c)("compressionTolerance")],be.prototype,"writeCompressionTolerance",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"format",null),(0,n._)([(0,u.Cb)({type:String,json:{read:{reader:ge.c.read},write:{writer:ge.c.write}}}),(0,_.B)("layer.interpolation")],be.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}}),(0,_.B)("layer.noData")],be.prototype,"noData",void 0),(0,n._)([(0,u.Cb)({type:String,json:{read:{reader:ge.k.read},write:{writer:ge.k.write}}}),(0,_.B)("layer.noDataInterpretation")],be.prototype,"noDataInterpretation",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"pixelType",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"lercVersion",void 0),(0,n._)([(0,m.c)("lercVersion")],be.prototype,"writeLercVersion",null),(0,n._)([(0,u.Cb)({type:Number})],be.prototype,"version",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"mosaicRule",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"renderingRule",null),be=(0,n._)([(0,p.j)("esri.layers.mixins.ExportImageServiceParameters")],be);var Re=i(12512),we=i(28790),ve=i(34780),xe=i(71429),Se=i(29410),_e=i(76386),Ce=i(21859),Ie=i(7928),Fe=i(23872),Pe=i(64590),De=i(5146),Te=i(84238),Ne=i(14685);let Me=class extends P.wq{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};(0,n._)([(0,u.Cb)({type:Number,json:{write:!0}})],Me.prototype,"north",void 0),(0,n._)([(0,u.Cb)({type:Number,json:{write:!0}})],Me.prototype,"up",void 0),(0,n._)([(0,u.Cb)({type:Ne.Z,json:{write:!0}})],Me.prototype,"spatialReference",void 0),Me=(0,n._)([(0,p.j)("esri.rest.support.ImageAngleResult")],Me);const Oe=Me;var Ae=i(51211);let Ve=class extends P.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,u.Cb)({type:Ae["default"],json:{write:!0}})],Ve.prototype,"catalogItems",void 0),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],Ve.prototype,"location",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"name",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"objectId",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"processedValues",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"properties",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ve.prototype,"value",void 0),Ve=(0,n._)([(0,p.j)("esri.rest.support.ImageIdentifyResult")],Ve);const je=Ve;let Je=class extends P.wq{constructor(){super(...arguments),this.geometries=null}};(0,n._)([(0,u.Cb)({json:{write:!0}})],Je.prototype,"geometries",void 0),Je=(0,n._)([(0,p.j)("esri.rest.support.ImagePixelLocationResult")],Je);const ke=Je;let Ee=class extends P.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,n._)([(0,u.Cb)({json:{write:!0}})],Ee.prototype,"attributes",void 0),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],Ee.prototype,"location",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ee.prototype,"locationId",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ee.prototype,"rasterId",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ee.prototype,"resolution",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],Ee.prototype,"pixelValue",void 0),Ee=(0,n._)([(0,p.j)("esri.rest.support.ImageSample")],Ee);const qe=Ee;let Le=class extends P.wq{constructor(){super(...arguments),this.samples=null}};(0,n._)([(0,u.Cb)({type:[qe],json:{write:!0}})],Le.prototype,"samples",void 0),Le=(0,n._)([(0,p.j)("esri.rest.support.ImageSampleResult")],Le);const ze=Le;function Ze(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Ue(e,t,i){const r=(0,Te.en)(e),n=t.geometry?[t.geometry]:[],s=await(0,De.aX)(n),o=t.toJSON();Ze(o);const l=s&&s[0];(0,a.pC)(l)&&(o.geometry=l.toJSON());const u=(0,Te.cv)({...r.query,f:"json",...o});return(0,Te.lA)(u,i)}async function He(e,t,i){const r=t.toJSON();(0,a.pC)(r.angleName)&&(r.angleName=r.angleName.join(",")),(0,a.pC)(t.point)&&t.point.spatialReference?.imageCoordinateSystem&&(r.point.spatialReference=$e(t.point.spatialReference)),(0,a.pC)(t.spatialReference)&&t.spatialReference.imageCoordinateSystem&&(r.spatialReference=Xe(t.spatialReference));const n=(0,Te.en)(e),s=(0,Te.cv)({...n.query,f:"json",...r}),o=(0,Te.lA)(s,i),{data:l}=await(0,g["default"])(`${n.path}/computeAngles`,o);return l.spatialReference=l.spatialReference?null!=l.spatialReference.geodataXform?new Ne.Z({wkid:0,imageCoordinateSystem:l.spatialReference}):Ne.Z.fromJSON(l.spatialReference):null,"NaN"===l.north&&(l.north=null),"NaN"===l.up&&(l.up=null),new Oe(l)}async function Be(e,t,i){const r=t.toJSON(),{geometries:n}=t;for(let u=0;u<n.length;u++)n[u].spatialReference?.imageCoordinateSystem&&(r.geometries.geometries[u].spatialReference=$e(n[u].spatialReference));const s=(0,Te.en)(e),a=(0,Te.cv)({...s.query,f:"json",...r}),o=(0,Te.lA)(a,i),{data:l}=await(0,g["default"])(`${s.path}/computePixelLocation`,o);return ke.fromJSON(l)}async function Qe(e,t,i){const r=await Ue(e,t,i),n=(0,Te.en)(e),{data:s}=await(0,g["default"])(`${n.path}/computeStatisticsHistograms`,r),{statistics:a}=s;return a?.length&&a.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a,histograms:s.histograms}}async function Ge(e,t,i){const r=await Ue(e,t,i),n=(0,Te.en)(e),{data:s}=await(0,g["default"])(`${n.path}/computeHistograms`,r);return{histograms:s.histograms}}async function We(e,t,i){const r=t.toJSON();Ze(r),r.outFields?.length&&(r.outFields=r.outFields.join(","));const n=(await(0,De.aX)(t.geometry))?.[0];(0,a.pC)(n)&&(r.geometry=n.toJSON());const s=(0,Te.en)(e),o=(0,Te.cv)({...s.query,f:"json",...r}),l=(0,Te.lA)(o,i),{data:u}=await(0,g["default"])(`${s.path}/getSamples`,l),c=u?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return ze.fromJSON({samples:c})}async function Ke(e,t,i){const r=(0,Te.en)(e),n=t.geometry?[t.geometry]:[];return(0,De.aX)(n).then((e=>{const n=t.toJSON(),s=e&&e[0];(0,a.pC)(s)&&(n.geometry=JSON.stringify(s.toJSON()));const o=(0,Te.cv)({...r.query,f:"json",...n}),l=(0,Te.lA)(o,i);return(0,g["default"])(r.path+"/identify",l)})).then((e=>je.fromJSON(e.data)))}function $e(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function Xe(e,t){const i=$e(e),{icsid:r,icsns:n,wkid:s}=i;return null!=r?null==n||t?.toLowerCase().includes("/"+n.toLowerCase()+"/")?`0:${r}`:JSON.stringify(i):s?s.toString():JSON.stringify(i)}i(6095);var Ye,et=i(96027),tt=(i(17321),i(35925),i(12065),i(91772)),it=(i(20031),i(74304)),rt=i(89542),nt=(i(90819),i(76480),i(14136)),st=(i(88256),i(72635),i(67692),i(78254)),at=i(13865),ot=(i(8284),i(98136),i(57232)),lt=i(20613);async function ut(e,t,i){const r=(0,Te.en)(e),n=(0,Te.cv)({...r.query,f:"json"}),s=(0,Te.lA)(n,i),a=`${r.path}/${t}/info`,o=(0,g["default"])(`${a}`,s),l=(0,g["default"])(`${a}/keyProperties`,s),u=await Promise.allSettled([o,l]),c="fulfilled"===u[0].status?u[0].value.data:null,p="fulfilled"===u[1].status?u[1].value.data:null;let m=null;c.statistics?.length&&(m=c.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const d=tt.Z.fromJSON(c.extent),h=Math.ceil(d.width/c.pixelSizeX-.1),y=Math.ceil(d.height/c.pixelSizeY-.1),f=d.spatialReference,b=new pe.Z({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:f}),R=c.histograms?.length?c.histograms:null,w=new lt.Z({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new xe.Z({width:h,height:y,bandCount:c.bandCount,extent:d,spatialReference:f,pixelSize:b,pixelType:c.pixelType.toLowerCase(),statistics:m,histograms:R,keyProperties:p,storageInfo:w})}let ct=Ye=class extends P.wq{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ye((0,w.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,n._)([(0,u.Cb)({type:[String],json:{name:"angleName",write:!0}})],ct.prototype,"angleNames",void 0),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],ct.prototype,"point",void 0),(0,n._)([(0,u.Cb)({type:Ne.Z,json:{write:!0}})],ct.prototype,"spatialReference",void 0),(0,n._)([(0,u.Cb)({type:c.z8,json:{write:!0}})],ct.prototype,"rasterId",void 0),ct=Ye=(0,n._)([(0,p.j)("esri.rest.support.ImageAngleParameters")],ct);const pt=ct;var mt,dt=i(37956),ht=i(53736);let yt=mt=class extends P.wq{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ht.Ji)(e),t[i]=e.toJSON())}clone(){return new mt((0,w.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};(0,n._)([(0,u.Cb)({types:h.qM,json:{read:ht.im}})],yt.prototype,"geometry",void 0),(0,n._)([(0,m.c)("geometry")],yt.prototype,"writeGeometry",null),(0,n._)([(0,u.Cb)({type:fe,json:{write:!0}})],yt.prototype,"mosaicRule",void 0),(0,n._)([(0,u.Cb)({type:k,json:{write:!0}})],yt.prototype,"renderingRule",void 0),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],yt.prototype,"pixelSize",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],yt.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({type:dt.Z,json:{read:{source:"time"},write:{target:"time"}}})],yt.prototype,"timeExtent",void 0),yt=mt=(0,n._)([(0,p.j)("esri.rest.support.ImageHistogramParameters")],yt);const ft=yt;var gt;let bt=gt=class extends P.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ht.Ji)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=fe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=k.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRenderingRules(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=(0,a.pC)(e.start)?e.start.getTime():null,n=(0,a.pC)(e.end)?e.end.getTime():null;t[i]=null!=r?null!=n?`${r},${n}`:`${r}`:null}}clone(){return new gt((0,w.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n._)([(0,u.Cb)({json:{write:!0}})],bt.prototype,"geometry",void 0),(0,n._)([(0,m.c)("geometry")],bt.prototype,"writeGeometry",null),(0,n._)([(0,u.Cb)({type:fe,json:{write:!0}})],bt.prototype,"mosaicRule",null),(0,n._)([(0,m.c)("mosaicRule")],bt.prototype,"writeMosaicRule",null),(0,n._)([(0,u.Cb)({type:k,json:{write:!0}})],bt.prototype,"renderingRule",null),(0,n._)([(0,m.c)("renderingRule")],bt.prototype,"writeRenderingRule",null),(0,n._)([(0,u.Cb)({type:[k],json:{write:!0}})],bt.prototype,"renderingRules",void 0),(0,n._)([(0,m.c)("renderingRules")],bt.prototype,"writeRenderingRules",null),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],bt.prototype,"pixelSize",void 0),(0,n._)([(0,m.c)("pixelSize")],bt.prototype,"writePixelSize",null),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"returnGeometry",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"returnCatalogItems",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"returnPixelValues",void 0),(0,n._)([(0,u.Cb)({type:Number,json:{write:!0}})],bt.prototype,"maxItemCount",void 0),(0,n._)([(0,u.Cb)({type:dt.Z,json:{write:{target:"time"}}})],bt.prototype,"timeExtent",void 0),(0,n._)([(0,m.c)("timeExtent")],bt.prototype,"writeTimeExtent",null),(0,n._)([(0,u.Cb)({json:{write:!0}})],bt.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({json:{write:!0}})],bt.prototype,"viewId",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],bt.prototype,"processAsMultidimensional",void 0),bt=gt=(0,n._)([(0,p.j)("esri.rest.support.ImageIdentifyParameters")],bt);const Rt=bt;var wt;let vt=wt=class extends P.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new wt({geometries:this.geometries.map((e=>e.clone())),rasterId:this.rasterId})}};(0,n._)([(0,u.Cb)({type:[pe.Z],json:{write:!0}})],vt.prototype,"geometries",void 0),(0,n._)([(0,m.c)("geometries")],vt.prototype,"writeGeometry",null),(0,n._)([(0,u.Cb)({type:c.z8,json:{write:!0}})],vt.prototype,"rasterId",void 0),vt=wt=(0,n._)([(0,p.j)("esri.rest.support.ImagePixelLocationParameters")],vt);const xt=vt;var St;let _t=St=class extends P.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,ht.Ji)(e),t[i]=e.toJSON())}set locations(e){if(e?.length){const t=new it.Z({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new St((0,w.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,n._)([(0,u.Cb)({types:h.qM,json:{read:ht.im}})],_t.prototype,"geometry",void 0),(0,n._)([(0,m.c)("geometry")],_t.prototype,"writeGeometry",null),(0,n._)([(0,u.Cb)()],_t.prototype,"locations",null),(0,n._)([(0,u.Cb)({type:String,json:{type:ge.c.jsonValues,read:ge.c.read,write:ge.c.write}})],_t.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)({type:fe,json:{write:!0}})],_t.prototype,"mosaicRule",void 0),(0,n._)([(0,u.Cb)({type:[String],json:{write:!0}})],_t.prototype,"outFields",void 0),(0,n._)([(0,u.Cb)({type:pe.Z,json:{write:!0}})],_t.prototype,"pixelSize",void 0),(0,n._)([(0,u.Cb)({type:String,json:{write:!0}})],_t.prototype,"raster",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],_t.prototype,"returnFirstValueOnly",void 0),(0,n._)([(0,u.Cb)({type:Number,json:{write:!0}})],_t.prototype,"sampleDistance",void 0),(0,n._)([(0,u.Cb)({type:Number,json:{write:!0}})],_t.prototype,"sampleCount",void 0),(0,n._)([(0,u.Cb)({type:Number,json:{write:!0}})],_t.prototype,"sliceId",void 0),(0,n._)([(0,u.Cb)({type:dt.Z,json:{read:{source:"time"},write:{target:"time"}}})],_t.prototype,"timeExtent",void 0),_t=St=(0,n._)([(0,p.j)("esri.rest.support.ImageSampleParameters")],_t);const Ct=_t;var It=i(88243);const Ft=v.Z.getLogger("esri.layers.mixins.ArcGISImageService"),Pt=(0,R.w)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Dt=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Tt=(0,u.Eg)(c.q9,{min:0,max:255});function Nt(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi)?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return t?t.join("/"):null}const Mt=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new be({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?fe.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||(0,a.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||(0,a.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get fieldsIndex(){return this.fields?new we.Z(this.fields):null}set format(e){e&&Dt.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=fe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?fe.fromJSON(i):this._isMosaicRuleSupported(t)?fe.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const n=this.definitionExpression;r?n&&n!==r.where&&(r=r.clone(),r.where=n):n&&(r=new fe({where:n})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Tt(e))}readObjectIdField(e,t){if(!e){const i=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i&&i[0]&&i[0].name}return e}get parsedUrl(){return this.url?(0,S.mN)(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){const r=t?.layerDefinition?.drawingInfo?.renderer,n=(0,f.ij)(r,i);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!r.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),B(n)||Ft.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new Re.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new Re.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new Re.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,w.d9)(this.fields):[];n.push(i),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&(0,a.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(r),(0,a.pC)(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new Re.Z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(n.push(new Re.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new Re.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const s=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(s&&s.length>0){const t=s.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const i=(0,w.d9)(t);return i.name=e+t.name,i}));n=n.concat(t)}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=k.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i&&i.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?k.fromJSON({rasterFunctionDefinition:t.renderingRule}):k.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,i){const r=e.toJSON();r.rasterFunctionDefinition?t[i]=r.rasterFunctionDefinition:t[i]=r}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?Ne.Z.fromJSON(i):null}readPixelType(e){return Pt.fromJSON(e)||e}writePixelType(e,t,i){((0,a.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=Pt.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const r=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:s}=this;if(n){r&&(this.symbolizer.bind(),await n.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await n.symbolize({bandIds:s,...e},t);i={extent:e.extent,pixelBlock:a}}else i={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:s,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeAngles)throw new b.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,c.TJ)(pt,e).clone(),He(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new b.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,c.TJ)(xt,e).clone(),Be(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeHistograms)throw new b.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=(0,c.TJ)(ft,e).clone();const{raster:i,mosaicRule:r,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),Ge(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new b.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=(0,c.TJ)(ft,e).clone();const{raster:i,mosaicRule:r,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),r&&null==e.mosaicRule&&(e.mosaicRule=r),i&&null==e.raster&&(e.raster=i),Qe(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return(0,a.pC)(t)?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}fetchImage(e,t,i,r={}){if(null==e||null==t||null==i)return Promise.reject(new b.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:r.signal}):null;return(0,l.gx)(n).then((n=>{n&&(this.rasterInfo=n);const s={imageServiceParameters:this.getExportImageServiceParameters(e,t,i,r.timeExtent),imageProps:{extent:e,width:t,height:i,format:this.format},requestAsImageElement:r.requestAsImageElement&&!this.pixelFilter||!1,signal:r.signal};return this._requestArrayBuffer(s)}))}fetchKeyProperties(e){return(0,g["default"])(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new b.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,g["default"])(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>Ae["default"].fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return ut(this.parsedUrl.path,e,i)}async getCatalogItemICSInfo(e,t){const{data:i}=await(0,g["default"])(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),r=i&&i.ics;if(!r)return;let n=null;try{n=(await(0,g["default"])(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:r,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?(0,g["default"])(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},l=(0,g["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then((e=>e.data)).catch((()=>({}))),u=5,c=(n.xmin+n.xmax)/2,p=(n.ymax-n.ymin)/(u+1),m=n.ymin+p,d=[];for(let g=0;g<u;g++)d.push({x:c,y:m+p*g});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},y=(0,g["default"])(this.parsedUrl.path+"/project",{query:this._getQueryParams(h),...t}).then((e=>e.data)).catch((()=>({}))),f=await Promise.all([s,l,y]);let b=f[0].ipxf;if(null==b){const e=r.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(b={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const R=tt.Z.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);R&&(R.spatialReference=new Ne.Z({wkid:0,imageCoordinateSystem:r}));const w=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],v=w.length;if(v<3)return{ics:r,icsToPixelTransform:b,icsExtent:R,northDirection:null};let x=0,S=0,_=0,C=0;for(let g=0;g<v;g++)x+=w[g].x,S+=w[g].y,_+=w[g].x*w[g].x,C+=w[g].x*w[g].y;const I=(v*C-x*S)/(v*_-x*x);let F=0;const P=w[u-1].x>w[0].x,D=w[u-1].y>w[0].y;return I===1/0?F=D?90:270:0===I?F=P?0:180:I>0?F=P?180*Math.atan(I)/Math.PI:180*Math.atan(I)/Math.PI+180:I<0&&(F=D?180+180*Math.atan(I)/Math.PI:360+180*Math.atan(I)/Math.PI),{ics:r,icsToPixelTransform:b,icsExtent:R,northDirection:F}}async generateRasterInfo(e,t){if((!e||"none"===e?.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))&&(0,a.pC)(this.serviceRasterInfo))return this.serviceRasterInfo;const i=Nt(e);if(this._functionRasterInfos[i])return this._functionRasterInfos[i];const r=this._generateRasterInfo(e,t);this._functionRasterInfos[i]=r;try{return await r}catch{return this._functionRasterInfos[i]=null,null}}getExportImageServiceParameters(e,t,i,r){e=e.clone().shiftCentralMeridian();const n=Xe(e.spatialReference,this.parsedUrl.path);(0,a.pC)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const s=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:l}=s;let{renderingRule:u}=s;const c=this.renderingRule?.rasterFunctionDefinition,p=!this.renderer||"raster-stretch"===this.renderer.type;if(o?.length&&this._hasRenderingRule(this.renderingRule)&&!c&&p){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;s.bandIds=void 0}else s.bandIds=o?.join(",");l instanceof Array&&l.length>0&&(s.noData=l.join(","));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,r):null;s.mosaicRule=m&&JSON.stringify(m),s.renderingRule=this._getRenderingRuleString(k.fromJSON(u));const d={};if(r){const{start:e,end:t}=r.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+i,...s,...d}}async getSamples(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsGetSamples)throw new b.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,c.TJ)(Ct,e).clone();const{raster:i}=this;return i&&null==e.raster&&(e.raster=i),We(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsIdentify)throw new b.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=(0,c.TJ)(Rt,e).clone();const{raster:i,mosaicRule:r,renderingRule:n}=this;if(n&&null==e.renderingRule&&(e.renderingRule=n),r&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(r,e.timeExtent);e.mosaicRule=(0,a.Wg)(t)}return i&&null==e.raster&&(e.raster=i),Ke(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new nt.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,et.e)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,at.G)(this.url,e,t)}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,st.P)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new b.Z("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:n,showNoDataRecords:s}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const c="raster.servicepixelvalue",p=this.rasterFunctionNamesIndex;if((0,a.pC)(e.outFields)&&(o=e.outFields.some((e=>!e.toLowerCase().includes(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(c)&&e.length>c.length)).map((e=>{const t=e.slice(c.length+1);return[this._updateRenderingRulesFunctionName(t,p),t]}));l=t.map((e=>new k({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const m=(0,a.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),d=e.timeExtent||this.timeExtent,h=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,d),y=this._getQueryParams({geometry:e.geometry,timeExtent:d,mosaicRule:h,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:i,returnCatalogItems:o,returnGeometry:m,raster:this.raster,maxItemCount:n?1:null});delete y.f;const f=new Rt(y);try{await this.generateRasterInfo(this.renderingRule);const i=await Ke(this.url,f,{signal:t?.signal,query:{...this.customParameters}}),n=e.outFields,l=i.value.toLowerCase().includes("nodata");if(!o||m||!i?.catalogItems?.features.length||!s&&l)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n});const c=this.objectIdField||"ObjectId",p=i.catalogItems.features,d=p.map((e=>e.attributes?.[c])),h=new nt.Z({objectIds:d,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[c]}),y=await this.queryRasters(h);return y?.features?.length&&y.features.forEach((t=>{p.forEach((i=>{i.attributes[c]===t.attributes[c]&&(i.geometry=new rt.Z(t.geometry),(0,a.pC)(e.outSpatialReference)&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:s,templateFields:n})}catch{throw new b.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const i=(0,g["default"])(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),r=(0,g["default"])(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),n=await Promise.all([i,r]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,It.GE)(e.meshType,e.simulationSettings,e.flowData,(0,a.pC)(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),(0,a.pC)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,i=(0,a.pC)(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):(0,ot.g)(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),r=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([i,r,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),Ft.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.own((0,x.YP)((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))})));const{serviceRasterInfo:t}=this;(0,a.pC)(t)&&t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo;if((0,a.Wi)(e)||(0,a.Wi)(this.multidimensionalInfo)||(0,a.Wi)(t)||(0,a.Wi)(i?.startField))return e;const{startField:r}=i,n=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===r))))?r:"StdTime";if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const s=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),o=(0,a.pC)(t.start)?t.start.getTime():null,l=(0,a.pC)(t.end)?t.end.getTime():null,u=null==o||null==l||o===l,c=u?[o||l]:[[o,l]],p=this.version>=10.8;if(s.length)s.forEach((e=>{e.dimensionName===n&&(p?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=u,e.values=c))}));else if(!p){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=u,e.values=c})):e.multidimensionalDefinition.push(new F.Z({variableName:"",dimensionName:n,isSlice:u,values:c}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return(0,a.Wi)(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsQuery)throw new b.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=(0,a.pC)(e)?(0,c.TJ)(nt.Z,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new Se.Z;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:i}=this;return"unique-value"===e.type&&this._hasRenderingRule(i)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||(0,Fe.U0)(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:i,ssl:r}=await(0,g["default"])(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});t=i,this.sourceJSON=t,r&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new b.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if((0,a.Wi)(e))return!1;const{functionName:t,functionArguments:i}=e,r="resample"===t?.toLowerCase(),n=i?.ResampleType||i?.resampleType;return r&&(7===n||10===n)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=(0,Fe.YD)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,Fe.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,Fe.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new Pe.Z({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:(0,a.pC)(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){(0,a.pC)(e?.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,Ce.J)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;return this.serviceRasterInfo?t:t&&this.version>=10.3?1===t.length&&"none"===t[0].name.toLowerCase()?t:(await(0,g["default"])(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:i,signal:r}=e;if(i&&!this.pixelFilter&&t.format?.indexOf("png")>-1)return{imageElement:(await(0,g["default"])(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:r})).data,params:t};const n=this._initJobHandler(),s=(0,g["default"])(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:r}),a=(await Promise.all([s,n]))[0].data,o=t.format||"jpgpng";let l=o;if("bsq"!==l&&"bip"!==l&&(l=(0,Ce.y)(a)),!l)throw new b.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(a)));const u={signal:r},c="gif"===o||"bmp"===o||o.includes("png")&&("png"===l||"jpg"===l)?(0,Ce.J)(a,{useCanvas:!0,...t},u):this._decodePixelBlock(a,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:o},u);return{pixelData:{pixelBlock:await c,extent:t.extent},params:t}}_generateRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return(0,ot.N)(this.parsedUrl.path,e,i)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=(0,_e.Tj)(e);if((0,a.pC)(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new fe;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:n,returnDomainValues:s,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",m="string"==typeof i&&i.toLowerCase().includes("nodata"),d=[];if(i&&!u&&!m){const e={};e[p]=0,c=[i],u=[new y.Z(this.fullExtent,null,e)]}if(!u)return[];let h,f,g;this._updateResponseFieldNames(u,o),m&&!n&&(u=[]);for(let y=0;y<u.length;y++){if(h=u[y],null!=i){if(f=c[y],g=this.renderingRule&&l&&l.length>0&&r&&r.length>0&&r.includes(this.renderingRule.functionName)?l[r.indexOf(this.renderingRule.functionName)]:i,"nodata"===f.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",t="Raster.ServicePixelValue";h.attributes[e]=f,h.attributes[t]=g,this._updateFeatureWithMagDirValues(h,f);const s=this.fields&&this.fields.length>0;let o=this.renderingRule&&(0,a.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?s?f:i:g;this.renderingRule||(o=s?f:i),this._updateFeatureWithRasterAttributeTableValues(h,o)}if(h.sourceLayer=h.layer=this,s&&this._updateFeatureWithDomainValues(h),r&&l&&r.length===l.length)for(let e=0;e<r.length;e++){const t="Raster.ServicePixelValue."+r[e];h.attributes[t]=l[e]}d.push(u[y])}return d}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo&&this.rasterInfo.attributeTable||(0,a.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,r=i&&i.features;if(!r)return;const n=i.fields,s=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=s&&s[0];if(!o)return;const l=r.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const i=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=l[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),n=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new ve.Z({height:1,width:1,pixelType:"f32",pixels:r,statistics:n});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:s,extent:new tt.Z(0,0,0,0,this.spatialReference)});const a="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[s.pixels[0][0],s.pixels[1][0]]:(0,Ie.Tg)([s.pixels[0][0],s.pixels[1][0]]);e.attributes["Raster.Magnitude"]=a[0],e.attributes["Raster.Direction"]=a[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;(0,a.Wi)(i)||e.forEach((e=>{if(e&&e.attributes)for(const r of t)if(i.has(r)){const t=i.get(r).name;t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replace(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:n}=e,s=t.includes("image"),a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:t.includes("mensuration")&&o,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&s,supportsProject:i>=10.3&&s,supportsComputeStatisticsHistograms:i>=10.4&&s,supportsQueryBoundary:i>=10.6&&s,supportsCalculateVolume:i>=10.7&&a,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:n,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return(0,n._)([(0,u.Cb)()],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,u.Cb)({dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"_defaultServiceMosaicRule",void 0),(0,n._)([(0,C.r)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),(0,n._)([(0,u.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_serviceSourceType",void 0),(0,n._)([(0,C.r)("_serviceSourceType",["serviceSourceType","fields"])],t.prototype,"readServiceSourceType",null),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,n._)([(0,C.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,n._)([(0,u.Cb)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"rasterFunctionNamesIndex",null),(0,n._)([(0,u.Cb)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,_.B)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),(0,n._)([(0,u.Cb)({type:[c.z8],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,C.r)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,C.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,u.Cb)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,m.c)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,u.Cb)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,m.c)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,u.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,u.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,type:[Re.Z]})],t.prototype,"fields",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,n._)([(0,u.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,C.r)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,u.Cb)({type:tt.Z})],t.prototype,"fullExtent",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,u.Cb)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,u.Cb)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,u.Cb)({type:String,json:{type:ge.c.jsonValues,read:ge.c.read,write:ge.c.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"minScale",void 0),(0,n._)([(0,C.r)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,u.Cb)()],t.prototype,"maxScale",void 0),(0,n._)([(0,C.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,u.Cb)({type:fe})],t.prototype,"mosaicRule",null),(0,n._)([(0,C.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,m.c)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,_.B)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,u.Cb)({json:{type:c.z8}})],t.prototype,"noData",void 0),(0,n._)([(0,m.c)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,u.Cb)({type:String,json:{type:ge.k.jsonValues,read:ge.k.read,write:ge.k.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,u.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,C.r)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,u.Cb)({})],t.prototype,"geometryType",void 0),(0,n._)([(0,u.Cb)({})],t.prototype,"typeIdField",void 0),(0,n._)([(0,u.Cb)({})],t.prototype,"types",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,_.B)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,_.B)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),(0,n._)([(0,u.Cb)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"viewId",void 0),(0,n._)([(0,u.Cb)({types:f.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:f.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,n._)([(0,C.r)("renderer")],t.prototype,"readRenderer",null),(0,n._)([(0,m.c)("renderer")],t.prototype,"writeRenderer",null),(0,n._)([(0,u.Cb)()],t.prototype,"symbolizer",void 0),(0,n._)([(0,u.Cb)(I.Oh)],t.prototype,"opacity",void 0),(0,n._)([(0,u.Cb)({readOnly:!0}),(0,_.B)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"rasterFields",null),(0,n._)([(0,u.Cb)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,u.Cb)({type:k})],t.prototype,"renderingRule",null),(0,n._)([(0,C.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),(0,n._)([(0,m.c)("renderingRule")],t.prototype,"writeRenderingRule",null),(0,n._)([(0,u.Cb)()],t.prototype,"serviceDataType",void 0),(0,n._)([(0,u.Cb)({readOnly:!0,type:Ne.Z})],t.prototype,"spatialReference",void 0),(0,n._)([(0,C.r)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,u.Cb)({json:{type:Pt.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,C.r)("pixelType")],t.prototype,"readPixelType",null),(0,n._)([(0,m.c)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,u.Cb)({constructOnly:!0,type:xe.Z})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,u.Cb)(I.HQ)],t.prototype,"url",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,C.r)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,p.j)("esri.layers.mixins.ArcGISImageService")],t),t};var Ot=i(87232),At=i(27668),Vt=i(63989),jt=i(16908),Jt=i(18241),kt=i(90277),Et=i(95874),qt=i(2030),Lt=i(76912),zt=i(10171);let Zt=class extends((0,At.h)((0,qt.n)((0,kt.Q)((0,Et.M)((0,jt.q)((0,Jt.I)(Mt((0,Vt.N)((0,Ot.Y)((0,o.R)(d.Z))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,a.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}writeOperationalLayerType(e,t,i){const r="vector-field"===this.renderer?.type;t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,i=this.title,r=new Set;let n=!1,s=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const a=new Set;n&&a.add("raster.itempixelvalue");for(const o of t){const e=o.name.toLowerCase();a.has(e)||e.includes("raster.servicepixelvalue.")||r.add(o.name)}return s&&r.add("raster.magnitude").add("raster.direction"),(0,zt.eZ)({fields:t,title:i},{...e,visibleFieldNames:r})}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(e){return(0,Lt.D)(this,e)}};(0,n._)([(0,u.Cb)(I.rn)],Zt.prototype,"legendEnabled",void 0),(0,n._)([(0,u.Cb)({type:["show","hide"]})],Zt.prototype,"listMode",void 0),(0,n._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Zt.prototype,"isReference",void 0),(0,n._)([(0,u.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Zt.prototype,"operationalLayerType",void 0),(0,n._)([(0,m.c)("web-map","operationalLayerType")],Zt.prototype,"writeOperationalLayerType",null),(0,n._)([(0,u.Cb)(I.C_)],Zt.prototype,"popupEnabled",void 0),(0,n._)([(0,u.Cb)({type:s.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Zt.prototype,"popupTemplate",void 0),(0,n._)([(0,u.Cb)({readOnly:!0})],Zt.prototype,"defaultPopupTemplate",null),(0,n._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Zt.prototype,"type",void 0),Zt=(0,n._)([(0,p.j)("esri.layers.ImageryLayer")],Zt);const Ut=Zt},7928:function(e,t,i){i.d(t,{BH:function(){return b},K:function(){return N},KC:function(){return f},NL:function(){return c},QI:function(){return g},Tg:function(){return d},Yx:function(){return p},nb:function(){return O},wF:function(){return M},xQ:function(){return y}});var r=i(25709),n=i(61681),s=i(34780),a=i(31329);const o=new Map;o.set("meter-per-second",1),o.set("kilometer-per-hour",.277778),o.set("knots",.514444),o.set("feet-per-second",.3048),o.set("mile-per-hour",.44704);const l=180/Math.PI,u=5,c=new r.X({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function p(e,t){return o.get(e)/o.get(t)||1}function m(e){return(450-e)%360}function d(e,t="geographic"){const[i,r]=e,n=Math.sqrt(i*i+r*r);let s=Math.atan2(r,i)*l;return s=(360+s)%360,"geographic"===t&&(s=m(s)),[n,s]}function h(e,t="geographic"){let i=e[1];"geographic"===t&&(i=m(i)),i%=360;const r=e[0];return[r*Math.cos(i/l),r*Math.sin(i/l)]}function y(e,t,i,r="geographic"){if(!(0,a.nk)(e)||(0,n.Wi)(i))return e;const s="vector-magdir"===t?e.clone():(0,n.Wg)(f(e,t)),o=s.pixels[1];for(let n=0;n<o.length;n++)o[n]="geographic"===r?(o[n]+i[n]+270)%360:(o[n]+360-i[n])%360;return"vector-magdir"===t?s:f(s,"vector-magdir")}function f(e,t,i="geographic",r=1){if(!(0,a.nk)(e))return e;const{pixels:n,width:o,height:l}=e,u=o*l,c=n[0],p=n[1],m=e.pixelType.startsWith("f")?e.pixelType:"f32",y=s.Z.createEmptyBand(m,u),f=s.Z.createEmptyBand(m,u);let g=0;for(let s=0;s<l;s++)for(let e=0;e<o;e++)"vector-uv"===t?([y[g],f[g]]=d([c[g],p[g]],i),y[g]*=r):([y[g],f[g]]=h([c[g],p[g]],i),y[g]*=r,f[g]*=r),g++;const b=new s.Z({pixelType:m,width:e.width,height:e.height,mask:e.mask,validPixelCount:e.validPixelCount,maskIsAlpha:e.maskIsAlpha,pixels:[y,f]});return b.updateStatistics(),b}function g(e,t,i=1){if(1===i||!(0,a.nk)(e))return e;const r=e.clone(),{pixels:n,width:s,height:o}=r,l=n[0],u=n[1];let c=0;for(let a=0;a<o;a++)for(let e=0;e<s;e++)"vector-uv"===t?(l[c]*=i,u[c]*=i):l[c]*=i,c++;return r.updateStatistics(),r}function b(e,t,i,r,s){if((0,n.Wi)(s)||!s.spatialReference.equals(e.spatialReference))return{extent:e,width:Math.round(t/r),height:Math.round(i/r),resolution:e.width/t};const a=s.xmin,o=s.ymax,l=(e.xmax-e.xmin)/t*r,u=(e.ymax-e.ymin)/i*r,c=(l+u)/2;return e.xmin=a+Math.floor((e.xmin-a)/l)*l,e.xmax=a+Math.ceil((e.xmax-a)/l)*l,e.ymin=o+Math.floor((e.ymin-o)/u)*u,e.ymax=o+Math.ceil((e.ymax-o)/u)*u,{extent:e,width:Math.round(e.width/l),height:Math.round(e.height/u),resolution:c}}const R=w(0,0,0);function w(e=0,t=0,i=Math.PI,r=!0){r&&(i=(2*Math.PI-i)%(2*Math.PI));const n=r?-1:1,s=13*n,a=-7*n,o=-2*n,l=-16*n,u=21.75,[c,p]=x(0,t+s,i,u),[m,d]=x(e-5.5,t+a,i,u),[h,y]=x(e+5.5,t+a,i,u),[f,g]=x(e-1.5,t+o,i,u),[b,R]=x(e+1.5,t+o,i,u),[w,v]=x(e-1.5,t+l,i,u),[S,_]=x(e+1.5,t+l,i,u);return[c,p,m,d,f,g,b,R,h,y,w,v,S,_]}function v(e=0,t=Math.PI,i=!0){i&&(t=(2*Math.PI-t)%(2*Math.PI));const r=10,n=i?-1:1,s=5*n,a=20*n,o=25*n,l=45,c=0,p=0,m=2,d=0,h=m*n;let[y,f]=[c+r/2,p-a],[g,b]=[y+m,f],[R,w]=[g-d,b+h],[v,S]=[c-r/2,p-o],[_,C]=[v+d,S-h],I=Math.ceil(e/u),F=Math.floor(I/10);I-=8*F;const P=[],D=[];for(let u=0;u<I/2;u++,F--){F<=0&&I%2==1&&u===(I-1)/2&&(v=c,_=v+d,S=(S+f)/2,C=S-h);const[e,i]=x(v,S,t,l);if(F>0){const[r,n]=x(g,S,t,l),[s,a]=x(y,f,t,l);P.push(r),P.push(n),P.push(e),P.push(i),P.push(s),P.push(a)}else{const[r,n]=x(g,b,t,l),[s,a]=x(R,w,t,l),[o,u]=x(_,C,t,l);D.push(e),D.push(i),D.push(o),D.push(u),D.push(s),D.push(a),D.push(r),D.push(n)}S+=s,f+=s,b+=s,w+=s,C+=s}const[T,N]=x(c+r/2,p+a,t,l),M=r/2+m,[O,A]=x(c+M,p+a,t,l),[V,j]=x(c+r/2,p-o,t,l),[J,k]=x(c+M,p-o,t,l);return{pennants:P,barbs:D,shaft:[T,N,O,A,V,j,J,k]}}function x(e,t,i,r=1){const n=Math.sqrt(e*e+t*t)/r,s=(2*Math.PI+Math.atan2(t,e))%(2*Math.PI);return[n,(2*Math.PI+s-i)%(2*Math.PI)]}const S=[0,1,3,6,10,16,21,27,33,40,47,55,63],_=[0,.5,1,1.5,2],C=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function I(e,t,i,r){const n=p(r||"knots",i);let s;for(s=1;s<t.length;s++)if(s===t.length-1){if(e<t[s]*n)break}else if(e<=t[s]*n)break;return Math.min(s-1,t.length-2)}function F(e,t,i,r,n){let s=0;switch(t){case"beaufort_kn":s=I(e,S,"knots",i);break;case"beaufort_km":s=I(e,S,"kilometer-per-hour",i);break;case"beaufort_ft":s=I(e,S,"feet-per-second",i);break;case"beaufort_m":s=I(e,S,"meter-per-second",i);break;case"classified_arrow":s=I(e,n,r,i);break;case"ocean_current_m":s=I(e,_,"meter-per-second",i);break;case"ocean_current_kn":s=I(e,C,"knots",i)}return s}function P(e,t){const{style:i,inputUnit:r,outputUnit:n,breakValues:s}=t,a=c.fromJSON(r),o=c.fromJSON(n),l=42,u=15;let p=0,m=0;const{width:d,height:h,mask:y}=e,f=e.pixels[0],g=e.pixels[1],b=y?y.filter((e=>e>0)).length:d*h,w=new Float32Array(b*l),v=new Uint32Array(u*b);for(let c=0;c<h;c++)for(let e=0;e<d;e++){const t=c*d+e;if(!y||y[c*d+e]){const r=(g[t]+360)%360/180*Math.PI??2*Math.PI*Math.random(),n=F(f[t],i,a,o,s);for(let i=0;i<R.length;i+=2)w[p++]=(e+.5)/d,w[p++]=(c+.5)/h,w[p++]=R[i],w[p++]=R[i+1]+r,w[p++]=n,w[p++]=f[t];const u=7*(p/l-1);v[m++]=u,v[m++]=u+1,v[m++]=u+2,v[m++]=u+0,v[m++]=u+4,v[m++]=u+3,v[m++]=u+0,v[m++]=u+2,v[m++]=u+3,v[m++]=u+2,v[m++]=u+5,v[m++]=u+3,v[m++]=u+5,v[m++]=u+6,v[m++]=u+3}}return{vertexData:w,indexData:v}}const D=[];function T(e,t){if(0===D.length)for(let u=0;u<30;u++)D.push(v(5*u,0));const i=p(c.fromJSON(t.inputUnit),"knots"),{width:r,height:n,mask:s}=e,a=e.pixels[0],o=e.pixels[1],l=6,m=[],d=[];let h=0,y=0;for(let c=0;c<n;c++)for(let e=0;e<r;e++){const t=c*r+e,p=a[t]*i;if((!s||s[c*r+e])&&p>=u){const i=(o[t]+360)%360/180*Math.PI??2*Math.PI*Math.random(),{pennants:s,barbs:a,shaft:u}=D[Math.min(Math.floor(p/5),29)];if(s.length+a.length===0)continue;let f=m.length/l;const g=(e+.5)/r,b=(c+.5)/n;for(let e=0;e<s.length;e+=2)m[h++]=g,m[h++]=b,m[h++]=s[e],m[h++]=s[e+1]+i,m[h++]=0,m[h++]=p;for(let e=0;e<a.length;e+=2)m[h++]=g,m[h++]=b,m[h++]=a[e],m[h++]=a[e+1]+i,m[h++]=0,m[h++]=p;for(let e=0;e<u.length;e+=2)m[h++]=g,m[h++]=b,m[h++]=u[e],m[h++]=u[e+1]+i,m[h++]=0,m[h++]=p;for(let e=0;e<s.length/6;e++)d[y++]=f,d[y++]=f+1,d[y++]=f+2,f+=3;for(let e=0;e<a.length/8;e++)d[y++]=f,d[y++]=f+1,d[y++]=f+2,d[y++]=f+1,d[y++]=f+2,d[y++]=f+3,f+=4;d[y++]=f+0,d[y++]=f+1,d[y++]=f+2,d[y++]=f+1,d[y++]=f+3,d[y++]=f+2,f+=4}}return{vertexData:new Float32Array(m),indexData:new Uint32Array(d)}}function N(e,t){const i=24;let r=0,n=0;const{width:s,height:a,mask:o}=e,l=e.pixels[0],m=[],d=[],h=p(c.fromJSON(t.inputUnit),"knots"),y="wind_speed"===t.style?u:Number.MAX_VALUE;for(let u=0;u<a;u++)for(let e=0;e<s;e++){const t=l[u*s+e]*h;if((!o||o[u*s+e])&&t<y){for(let i=0;i<4;i++)m[r++]=(e+.5)/s,m[r++]=(u+.5)/a,m[r++]=i<2?-.5:.5,m[r++]=i%2==0?-.5:.5,m[r++]=0,m[r++]=t;const o=4*(r/i-1);d[n++]=o,d[n++]=o+1,d[n++]=o+2,d[n++]=o+1,d[n++]=o+2,d[n++]=o+3}}return{vertexData:new Float32Array(m),indexData:new Uint32Array(d)}}function M(e,t){return"simple_scalar"===t.style?N(e,t):"wind_speed"===t.style?T(e,t):P(e,t)}function O(e,t,i,r=[0,0],n=.5){const{width:a,height:o,mask:l}=e,[u,c]=e.pixels,[p,m]=r,y=Math.round((a-p)/i),f=Math.round((o-m)/i),g=y*f,b=new Float32Array(g),R=new Float32Array(g),w=new Uint8Array(g),v="vector-uv"===t;for(let s=0;s<f;s++)for(let e=0;e<y;e++){let t=0;const r=s*y+e,f=Math.max(0,s*i+m),g=Math.max(0,e*i+p),x=Math.min(o,f+i),S=Math.min(a,g+i);for(let e=f;e<x;e++)for(let i=g;i<S;i++){const n=e*a+i;if(!l||l[n]){t++;const e=v?[u[n],c[n]]:[u[n],(360+c[n])%360],[i,s]=v?e:h(e);b[r]+=i,R[r]+=s}}if(t>=(x-f)*(S-g)*(1-n)){w[r]=1;const[e,i]=d([b[r]/t,R[r]/t]);b[r]=e,R[r]=i}else w[r]=0,b[r]=0,R[r]=0}const x=new s.Z({width:y,height:f,pixels:[b,R],mask:w});return x.updateStatistics(),x}},78254:function(e,t,i){i.d(t,{P:function(){return a}});var r=i(84238),n=i(28500),s=i(14136);async function a(e,t,i){const a=(0,r.en)(e);return(0,n.executeQueryForCount)(a,s.Z.from(t),{...i}).then((e=>e.data.count))}},13865:function(e,t,i){i.d(t,{G:function(){return a}});var r=i(84238),n=i(28500),s=i(14136);async function a(e,t,i){const a=(0,r.en)(e);return(0,n.executeQueryForIds)(a,s.Z.from(t),{...i}).then((e=>e.data.objectIds))}},88243:function(e,t,i){i.d(t,{GE:function(){return d},KK:function(){return x}});i(91957);var r=i(39994),n=i(13802),s=i(19431),a=i(61681),o=i(78668),l=i(4157),u=i(35925),c=i(91772);const p=n.Z.getLogger("esri.views.2d.engine.flow.dataUtils"),m=10;async function d(e,t,i,n){const s=performance.now(),a=h(t,i),l=performance.now(),u=f(t,a,i.width,i.height),c=performance.now(),d=b(u,!0),y=performance.now(),g="Streamlines"===e?R(d,m):w(d),v=performance.now();return(0,r.Z)("esri-2d-profiler")&&(p.info("I.1","_createFlowFieldFromData (ms)",Math.round(l-s)),p.info("I.2","_getStreamlines (ms)",Math.round(c-l)),p.info("I.3","createAnimatedLinesData (ms)",Math.round(y-c)),p.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(v-y)),p.info("I.5","createFlowMesh (ms)",Math.round(v-s)),p.info("I.6","Mesh size (bytes)",g.vertexData.buffer.byteLength+g.indexData.buffer.byteLength)),await Promise.resolve(),(0,o.k_)(n),g}function h(e,t){const i=g(t.data,t.width,t.height,e.smoothing);return e.interpolate?(e,r)=>{const n=Math.floor(e),s=Math.floor(r);if(n<0||n>=t.width)return[0,0];if(s<0||s>=t.height)return[0,0];const a=e-n,o=r-s,l=n,u=s,c=n<t.width-1?n+1:n,p=s<t.height-1?s+1:s,m=i[2*(u*t.width+l)],d=i[2*(u*t.width+c)],h=i[2*(p*t.width+l)],y=i[2*(p*t.width+c)],f=i[2*(u*t.width+l)+1],g=i[2*(u*t.width+c)+1];return[(m*(1-o)+h*o)*(1-a)+(d*(1-o)+y*o)*a,(f*(1-o)+i[2*(p*t.width+l)+1]*o)*(1-a)+(g*(1-o)+i[2*(p*t.width+c)+1]*o)*a]}:(e,r)=>{const n=Math.round(e),s=Math.round(r);return n<0||n>=t.width||s<0||s>=t.height?[0,0]:[i[2*(s*t.width+n)+0],i[2*(s*t.width+n)+1]]}}function y(e,t,i,r,n,s,a,o,l){const u=[];let c=i,p=r,m=0,[d,h]=t(c,p);d*=e.velocityScale,h*=e.velocityScale;const y=Math.sqrt(d*d+h*h);let f,g;u.push({x:c,y:p,t:m,speed:y});for(let b=0;b<e.verticesPerLine;b++){let[i,r]=t(c,p);i*=e.velocityScale,r*=e.velocityScale;const d=Math.sqrt(i*i+r*r);if(d<e.minSpeedThreshold)return u;const h=i/d,y=r/d;if(c+=h*e.segmentLength,p+=y*e.segmentLength,m+=e.segmentLength/d,Math.acos(h*f+y*g)>e.maxTurnAngle)return u;if(e.collisions){const e=Math.round(c*l),t=Math.round(p*l);if(e<0||e>a-1||t<0||t>o-1)return u;const i=s[t*a+e];if(-1!==i&&i!==n)return u;s[t*a+e]=n}u.push({x:c,y:p,t:m,speed:d}),f=h,g=y}return u}function f(e,t,i,r){const n=[],s=new l.Z,a=1/Math.max(e.lineCollisionWidth,1),o=Math.round(i*a),u=Math.round(r*a),c=new Int32Array(o*u);for(let l=0;l<c.length;l++)c[l]=-1;const p=[];for(let l=0;l<r;l+=e.lineSpacing)for(let t=0;t<i;t+=e.lineSpacing)p.push({x:t,y:l,sort:s.getFloat()});p.sort(((e,t)=>e.sort-t.sort));for(const{x:l,y:m}of p)if(s.getFloat()<e.density){const i=y(e,t,l,m,n.length,c,o,u,a);if(i.length<2)continue;n.push(i)}return n}function g(e,t,i,r){if(0===r)return e;const n=Math.round(3*r),s=new Array(2*n+1);let a=0;for(let u=-n;u<=n;u++){const e=Math.exp(-u*u/(r*r));s[u+n]=e,a+=e}for(let u=-n;u<=n;u++)s[u+n]/=a;const o=new Float32Array(e.length);for(let u=0;u<i;u++)for(let i=0;i<t;i++){let r=0,a=0;for(let o=-n;o<=n;o++){if(i+o<0||i+o>=t)continue;const l=s[o+n];r+=l*e[2*(u*t+(i+o))+0],a+=l*e[2*(u*t+(i+o))+1]}o[2*(u*t+i)+0]=r,o[2*(u*t+i)+1]=a}const l=new Float32Array(e.length);for(let u=0;u<t;u++)for(let e=0;e<i;e++){let r=0,a=0;for(let l=-n;l<=n;l++){if(e+l<0||e+l>=i)continue;const c=s[l+n];r+=c*o[2*((e+l)*t+u)+0],a+=c*o[2*((e+l)*t+u)+1]}l[2*(e*t+u)+0]=r,l[2*(e*t+u)+1]=a}return l}function b(e,t){const i=new l.Z,r=e.reduce(((e,t)=>e+t.length),0),n=new Float32Array(4*r),s=new Array(e.length);let a=0,o=0;for(const l of e){const e=a;for(const t of l)n[4*a+0]=t.x,n[4*a+1]=t.y,n[4*a+2]=t.t,n[4*a+3]=t.speed,a++;s[o++]={startVertex:e,numberOfVertices:l.length,totalTime:l[l.length-1].t,timeSeed:t?i.getFloat():0}}return{lineVertices:n,lineDescriptors:s}}function R(e,t){const i=9,{lineVertices:r,lineDescriptors:n}=e;let s=0,a=0;for(const d of n)s+=2*d.numberOfVertices,a+=6*(d.numberOfVertices-1);const o=new Float32Array(s*i),l=new Uint32Array(a);let u=0,c=0;function p(){l[c++]=u-2,l[c++]=u,l[c++]=u-1,l[c++]=u,l[c++]=u+1,l[c++]=u-1}function m(e,t,r,n,s,a,l,c){const p=u*i;let m=0;o[p+m++]=e,o[p+m++]=t,o[p+m++]=1,o[p+m++]=r,o[p+m++]=a,o[p+m++]=l,o[p+m++]=n/2,o[p+m++]=s/2,o[p+m++]=c,u++,o[p+m++]=e,o[p+m++]=t,o[p+m++]=-1,o[p+m++]=r,o[p+m++]=a,o[p+m++]=l,o[p+m++]=-n/2,o[p+m++]=-s/2,o[p+m++]=c,u++}for(const d of n){const{totalTime:e,timeSeed:i}=d;let n=null,s=null,a=null,o=null,l=null,u=null;for(let c=0;c<d.numberOfVertices;c++){const h=r[4*(d.startVertex+c)+0],y=r[4*(d.startVertex+c)+1],f=r[4*(d.startVertex+c)+2],g=r[4*(d.startVertex+c)+3];let b=null,R=null,w=null,v=null;if(c>0){b=h-n,R=y-s;const r=Math.sqrt(b*b+R*R);if(b/=r,R/=r,c>1){let e=b+l,i=R+u;const r=Math.sqrt(e*e+i*i);e/=r,i/=r;const n=Math.min(1/(e*b+i*R),t);e*=n,i*=n,w=-i,v=e}else w=-R,v=b;null!==w&&null!==v&&(m(n,s,a,w,v,e,i,g),p())}n=h,s=y,a=f,l=b,u=R,o=g}m(n,s,a,-u,l,e,i,o)}return{vertexData:o,indexData:l}}function w(e){const t=16,i=1,r=2,{lineVertices:n,lineDescriptors:s}=e;let a=0,o=0;for(const N of s){const e=N.numberOfVertices-1;a+=4*e*2,o+=6*e*2}const l=new Float32Array(a*t),u=new Uint32Array(o);let c,p,m,d,h,y,f,g,b,R,w,v,x,S,_=0,C=0;function I(){u[C++]=_-8,u[C++]=_-7,u[C++]=_-6,u[C++]=_-7,u[C++]=_-5,u[C++]=_-6,u[C++]=_-4,u[C++]=_-3,u[C++]=_-2,u[C++]=_-3,u[C++]=_-1,u[C++]=_-2}function F(e,n,s,a,o,u,c,p,m,d,h,y,f,g){const b=_*t;let R=0;for(const t of[i,r])for(const i of[1,2,3,4])l[b+R++]=e,l[b+R++]=n,l[b+R++]=s,l[b+R++]=a,l[b+R++]=c,l[b+R++]=p,l[b+R++]=m,l[b+R++]=d,l[b+R++]=t,l[b+R++]=i,l[b+R++]=f,l[b+R++]=g,l[b+R++]=o/2,l[b+R++]=u/2,l[b+R++]=h/2,l[b+R++]=y/2,_++}function P(e,t){let i=b+w,r=R+v;const n=Math.sqrt(i*i+r*r);i/=n,r/=n;const s=b*i+R*r;i/=s,r/=s;let a=w+x,o=v+S;const l=Math.sqrt(a*a+o*o);a/=l,o/=l;const u=w*a+v*o;a/=u,o/=u,F(c,p,m,d,-r,i,h,y,f,g,-o,a,e,t),I()}function D(e,t,i,r,n,s){if(b=w,R=v,w=x,v=S,null==b&&null==R&&(b=w,R=v),null!=h&&null!=y){x=e-h,S=t-y;const i=Math.sqrt(x*x+S*S);x/=i,S/=i}null!=b&&null!=R&&P(n,s),c=h,p=y,m=f,d=g,h=e,y=t,f=i,g=r}function T(e,t){b=w,R=v,w=x,v=S,null==b&&null==R&&(b=w,R=v),null!=b&&null!=R&&P(e,t)}for(const N of s){c=null,p=null,m=null,d=null,h=null,y=null,f=null,g=null,b=null,R=null,w=null,v=null,x=null,S=null;const{totalTime:e,timeSeed:t}=N;for(let i=0;i<N.numberOfVertices;i++)D(n[4*(N.startVertex+i)+0],n[4*(N.startVertex+i)+1],n[4*(N.startVertex+i)+2],n[4*(N.startVertex+i)+3],e,t);T(e,t)}return{vertexData:l,indexData:u}}function v(e,t){const i=t.pixels,{width:r,height:n}=t,a=new Float32Array(r*n*2),o=t.mask||new Uint8Array(r*n*2);if(t.mask||o.fill(255),"vector-uv"===e)for(let s=0;s<r*n;s++)a[2*s+0]=i[0][s],a[2*s+1]=-i[1][s];else if("vector-magdir"===e)for(let l=0;l<r*n;l++){const e=i[0][l],t=(0,s.Vl)(i[1][l]),r=Math.cos(t-Math.PI/2),n=Math.sin(t-Math.PI/2);a[2*l+0]=r*e,a[2*l+1]=n*e}return{data:a,mask:o,width:r,height:n}}async function x(e,t,i,n,s,a){const o=performance.now(),l=(0,u.C5)(t.spatialReference);if(!l){const l=await S(e,t,i,n,s,a);return(0,r.Z)("esri-2d-profiler")&&p.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-o)),(0,r.Z)("esri-2d-profiler")&&p.info("I.9","Number of parts",1),l}const[m,d]=l.valid,h=d-m,y=Math.ceil(t.width/h),f=t.width/y,g=Math.round(i/y);let b=t.xmin;const R=[],w=performance.now();for(let r=0;r<y;r++){const i=new c.Z({xmin:b,xmax:b+f,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference});R.push(S(e,i,g,n,s,a)),b+=f}const v=await Promise.all(R);(0,r.Z)("esri-2d-profiler")&&p.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-w)),(0,r.Z)("esri-2d-profiler")&&p.info("I.9","Number of parts",v.length);const x={data:new Float32Array(i*n*2),mask:new Uint8Array(i*n),width:i,height:n};let _=0;for(const r of v){for(let e=0;e<r.height;e++)for(let t=0;t<r.width;t++)_+t>=i||(x.data[2*(e*i+_+t)+0]=r.data[2*(e*r.width+t)+0],x.data[2*(e*i+_+t)+1]=r.data[2*(e*r.width+t)+1],x.mask[e*i+_+t]=r.mask[e*r.width+t]);_+=r.width}return(0,r.Z)("esri-2d-profiler")&&p.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-o)),x}async function S(e,t,i,r,n,s){const o={requestProjectedLocalDirections:!0,signal:s};if((0,a.pC)(n)&&(o.timeExtent=n),"imagery"===e.type){await e.load({signal:s});const n=e.rasterInfo.dataType,l=await e.fetchImage(t,i,r,o);return!l||(0,a.Wi)(l.pixelData)||(0,a.Wi)(l.pixelData.pixelBlock)?{data:new Float32Array(i*r*2),mask:new Uint8Array(i*r),width:i,height:r}:v(n,l.pixelData.pixelBlock)}await e.load({signal:s});const l=e.rasterInfo.dataType,u=await e.fetchPixels(t,i,r,o);return!u||(0,a.Wi)(u.pixelBlock)?{data:new Float32Array(i*r*2),mask:new Uint8Array(i*r),width:i,height:r}:v(l,u.pixelBlock)}}}]);
//# sourceMappingURL=245.b941d2d8.js.map